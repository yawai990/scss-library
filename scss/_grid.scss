@use 'sass:math';

$grid-columns : 12;
$grid-gaps : (
    '0':0,
    '10':10px,
    '20':20px,
    '30':30px,
);
$layout-values:(
    "start":flex-start,
    "end":flex-end,
    "center":center,
    "between":space-between,
    "around":space-around,
);
$items-values:(
    "start":flex-start,
    "end":flex-end,
    "center":center,
);
.container{
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.row{
    display: flex;
    flex-flow: row wrap;
}
//grid gaps;
@each $key,$val in $grid-gaps{
    .gap-#{$key} > * {
        padding: $val;
    }
    .gap-#{$key}{
        margin-left: -$val;
        margin-right: -$val;
    }
};
//justify-content 
@each $key,$val in $layout-values {
    .justify-#{$key}{
        justify-content: $val;
    }
};

//align-items
@each $key,$val in $items-values{
    .items-#{$key}{
        align-items: $val
    }
};
//column classes;
@include xs{
    @for $i from 1 through $grid-columns {
        .col-xs-#{$i}{
            width: math.div($i * 100%, $grid-columns);
            box-sizing: border-box;
            flex-grow: 0;
        }
    }
};

@include sm{
    @for $i from 1 through $grid-columns {
        .col-sm-#{$i}{
            width: math.div($i * 100%, $grid-columns);
            box-sizing: border-box;
            flex-grow: 0;
        }
    }
};

@include md{
    @for $i from 1 through $grid-columns {
        .col-md-#{$i}{
            width: math.div($i * 100%, $grid-columns);
            box-sizing: border-box;
            flex-grow: 0;
        }
    }
};

@include lg{
    @for $i from 1 through $grid-columns {
        .col-lg-#{$i}{
            width: math.div($i * 100%, $grid-columns);
            box-sizing: border-box;
            flex-grow: 0;
        }
    }
};

@include xl{
    @for $i from 1 through $grid-columns {
        .col-xl-#{$i}{
            width: math.div($i * 100%, $grid-columns);
            box-sizing: border-box;
            flex-grow: 0;
        }
    }
};